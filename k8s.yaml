apiVersion: v1
kind: Service
metadata:
  name: node-web-server
spec:
  type: NodePort
  ports:
    - name: web
      port: 8989
      targetPort: 8989
  selector:
    app: node-web
---
apiVersion: v1
kind: ReplicationController
metadata:
  name: node-web
spec:
  selector:
    # matchLabels:
    app: node-web
  replicas: 1
  template:
    metadata:
      labels:
        app: node-web
    spec:
      containers:
        - name: node-web
          image: 127.0.0.1:5000/node-web:1.0.0
          imagePullPolicy: Never
          args:
            ["servers"]
          volumeMounts:
            - name: config
              mountPath: /home/www/node-web/app/config.js
              subPath: config.js
          ports:
            - containerPort: 8989
          env:
            - name: TZ
              value: 'Asia/Shanghai'
      volumes:
        - name: config
          configMap:
            name: node-web-cfg
            items:
              - key: config.js
                path: config.js
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: node-web-cfg
  labels:
    app: node-web
data:
  config.js: |
    const path  = require('path');

    // 路径配置
    const root = path.join(__dirname, '../')
    const app = path.join(root, 'app')
    const fish = path.join(root, 'fish')

    exports.path = {
      root: root,
      app: app,
      fish: fish,
    }
    // mysql 配置
    exports.mysql = {
      host     : '127.0.0.1',
      user     : 'xxxx',
      password : '********',
      port: '3306',
      database: 'xxxx',
    }

    // 邮件配置
    exports.email = {
      service: 'QQ',
      user: 'xxxx@xxx.com',
      password: '********',
    }

    // OSS 配置
    exports.aliyun = {
      oss: {
        region: 'oss-cn-hangzhou',
        internal: false,
        secure: false,
        bucket: 'acgay',
        timeout: 300000,
        accessKeyId: '********',
        accessKeySecret: '*************',
      },
    }
