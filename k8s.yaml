apiVersion: v1
kind: ReplicationController
metadata:
  name: node-web-ac
spec:
  selector:
    # matchLabels:
    app: node-web-ac
  replicas: 1
  template:
    metadata:
      labels:
        app: node-web-ac
    spec:
      containers:
        - name: node-web-ac
          image: fish.co/node-web-ac:0.0.1
          imagePullPolicy: Never
          args:
            ["servers"]
          volumeMounts:
            - name: config
              mountPath: /home/www/node-web/config/system.js
              subPath: system.js
          ports:
            - containerPort: 8989
          env:
            - name: TZ
              value: 'Asia/Shanghai'
      volumes:
        - name: config
          configMap:
            name: node-web-ac-cfg
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: node-web-ac-cfg
  labels:
    app: node-web-ac
data:
  system.js: |
    const fs = require('fs')
    const path = require('path')

    // PATH
    const BASE_PATH = path.join(__dirname, '/..');
    const RUNTIME_PATH = path.join(BASE_PATH, ".runtime");
    const TEMP_PATH = path.join(RUNTIME_PATH, "temp");
    const LOG_PATH = path.join(RUNTIME_PATH, "log");
    const DB_PATH = path.join(RUNTIME_PATH, "db");
    const DB_FILE = path.join(DB_PATH, "datafile");
    const PROTO_ROOT = path.join(BASE_PATH, "protos");

    let PATHS = [RUNTIME_PATH, TEMP_PATH, LOG_PATH, DB_PATH, PROTO_ROOT];
    for (let PATH of PATHS) {
    if (!fs.existsSync(PATH)) fs.mkdirSync(PATH);
    }

    exports.PYTHON = 'python';
    exports.ENV = "prod"; // dev or prod
    exports.TEMP_PATH = TEMP_PATH;
    exports.LOG_PATH = LOG_PATH;
    exports.DB_FILE = DB_FILE;
    exports.PROTO_ROOT = PROTO_ROOT
    exports.BASE_PATH = BASE_PATH

    exports.SendGiftUserIDS = [34195163, 36782454]
    exports.SendGiftCycle = 120  // 送礼物周期
